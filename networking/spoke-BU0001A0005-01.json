{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hubVnetResourceId": {
            "type": "string",
            "metadata": {
                "description": "The regional hub network to which this regional spoke will peer to."
            }
        },
        "location": {
            "type": "string",
            "allowedValues": [
                "australiaeast",
                "canadacentral",
                "centralus",
                "eastus",
                "eastus2",
                "westus2",
                "francecentral",
                "germanywestcentral",
                "northeurope",
                "southafricanorth",
                "southcentralus",
                "uksouth",
                "westeurope",
                "japaneast",
                "southeastasia"
            ],
            "metadata": {
                "description": "The spokes's regional affinity, must be the same as the hub's location. All resources tied to this spoke will also be homed in this region. The network team maintains this approved regional list which is a subset of zones with Availability Zone support."
            }
        }
    },
    "variables": {
        "orgAppId": "BU0001A0005",
        "clusterVNetName": "[concat('vnet-spoke-', variables('orgAppId'), '-01')]",

        "routeTableName": "[concat('route-to-', parameters('location'), '-hub-fw')]",
        "hubRgName": "[split(parameters('hubVnetResourceId'),'/')[4]]",
        "hubNetworkName": "[split(parameters('hubVnetResourceId'),'/')[8]]",

        "hubFwResourceId": "[resourceId(variables('hubRgName'), 'Microsoft.Network/azureFirewalls', concat('fw-', parameters('location')))]",
        "hubLaWorkspaceName": "[concat('la-hub-', parameters('location'), '-', uniqueString(parameters('hubVnetResourceId')))]",
        "hubLaWorkspaceResourceId": "[resourceId(variables('hubRgName'), 'Microsoft.OperationalInsights/workspaces', variables('hubLaWorkspaceName'))]",
        "toHubPeeringName": "[concat('spoke-to-', variables('hubNetworkName'))]",

        "hubBastionSubnetResourceId": "[resourceId(variables('hubRgName'), 'Microsoft.Network/virtualNetworks/subnets', variables('hubNetworkName'), 'AzureBastionSubnet')]",

        "acrPrivateDnsZonesName": "privatelink.azurecr.io",
        "aksPrivateDnsZonesName": "[concat('privatelink.', parameters('location'), '.azmk8s.io')]",
        "akvPrivateDnsZonesName": "privatelink.vaultcore.azure.net",

        "primaryClusterPipName": "[concat('pip-', variables('orgAppId'), '-00')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-05-01",
            "name": "[variables('routeTableName')]",
            "location": "[parameters('location')]",
            "comments": "Next hop to regional hub Azure Firewall",
            "properties": {
                "routes": [
                    {
                        "name": "r-nexthop-to-fw",
                        "properties": {
                            "nextHopType": "VirtualAppliance",
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopIpAddress": "[reference(variables('hubFwResourceId'), '2020-05-01').ipConfigurations[0].properties.privateIpAddress]"
                        }
                    }
                ]
            }
        },
        {            
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat('nsg-', variables('clusterVNetName'), '-management-ops')]",
            "location": "[parameters('location')]",
            "comments": "NSG blocking all inbound traffic other than port 22 for jumpbox access.",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowSshFromHubBastionInBound",
                        "properties": {
                            "description": "Allow our Azure Bastion users in.",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "[reference(variables('hubBastionSubnetResourceId'), '2020-05-01').addressPrefix]",
                            "destinationPortRange": "22",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow443InternetOutBound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "Allow443VnetOutBound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Outbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "Microsoft.Insights/toHub",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-management-ops'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat('nsg-', variables('clusterVNetName'), '-system-nodepools')]",
            "location": "[parameters('location')]",
            "comments": "NSG on all AKS system nodepools. Feel free to constrict further both inbound and outbound!",
            "properties": {
                "securityRules": [
                    {
                        "name": "DenySshInBound",
                        "properties": {
                            "description": "No SSH access allowed to nodes.",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "Microsoft.Insights/toHub",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-system-nodepools'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat('nsg-', variables('clusterVNetName'), '-is-nodepools')]",
            "location": "[parameters('location')]",
            "comments": "NSG on the AKS in-scope nodepools. Feel free to constrict further both inbound and outbound!",
            "properties": {
                "securityRules": [
                    {
                        "name": "DenySshInBound",
                        "properties": {
                            "description": "No SSH access allowed to nodes.",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "Microsoft.Insights/toHub",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-is-nodepools'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat('nsg-', variables('clusterVNetName'), '-oos-nodepools')]",
            "location": "[parameters('location')]",
            "comments": "NSG on the AKS out-of-scope nodepools. Feel free to constrict further both inbound and outbound!",
            "properties": {
                "securityRules": [
                    {
                        "name": "DenySshInBound",
                        "properties": {
                            "description": "No SSH access allowed to nodes.",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "Microsoft.Insights/toHub",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-oos-nodepools'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat('nsg-', variables('clusterVNetName'), '-privatelinkendpoints')]",
            "location": "[parameters('location')]",
            "comments": "Default NSG on the private link subnet. No traffic should be allowed out, and only Tcp/443 in. Key Vault and Container Registry is expected to be accessed in here.",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAll443InFromVnet",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Outbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "Microsoft.Insights/toHub",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-privatelinkendpoints'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat('nsg-', variables('clusterVNetName'), '-aksilbs')]",
            "location": "[parameters('location')]",
            "comments": "Default NSG on the AKS ILB subnet. Feel free to constrict further!",
            "properties": {
                "securityRules": []
            },
            "resources": [
                {
                    "name": "Microsoft.Insights/toHub",
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-aksilbs'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "[concat('nsg-', variables('clusterVNetName'), '-appgw')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "comments": "NSG on the App Gateway subnet.",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow443InBound",
                        "properties": {
                            "description": "Allow ALL web traffic into 443. (If you wanted to allow-list specific IPs, this is where you'd list them.)",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowControlPlaneInBound",
                        "properties": {
                            "description": "Allow Azure Control Plane in. (https://docs.microsoft.com/azure/application-gateway/configuration-infrastructure#network-security-groups)",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "65200-65535",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowHealthProbesInBound",
                        "properties": {
                            "description": "Allow Azure Health Probes in. (https://docs.microsoft.com/azure/application-gateway/configuration-infrastructure#network-security-groups)",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAllOutBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Outbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "name": "Microsoft.Insights/toHub",
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-appgw'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "[concat('nsg-', variables('clusterVNetName'), '-acragents')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "comments": "NSG on the ACR docker subnet.",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowKeyVaultOutBound",
                        "properties": {
                            "description": "Allow KeyVault Access",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureKeyVault",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowStorageOutBound",
                        "properties": {
                            "description": "Allow Storage Access",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "Storage",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowEventHubOutBound",
                        "properties": {
                            "description": "Allow EventHub Access",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "EventHub",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowAadOutBound",
                        "properties": {
                            "description": "Allow Azure Active Directory Access",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureActiveDirectory",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowAzureMonitorBound",
                        "properties": {
                            "description": "Allow Azure Active Directory Access",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureMonitor",
                            "access": "Allow",
                            "priority": 140,
                            "direction": "Outbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "name": "Microsoft.Insights/toHub",
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-acragents'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[variables('clusterVNetName')]",
            "location": "[parameters('location')]",
            "comments": "65,536 (-reserved) IPs available to the workload, split across four subnets for AKS, one for App Gateway, and two for management.",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-appgw'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-system-nodepools'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-is-nodepools'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-oos-nodepools'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-aksilbs'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-management-ops'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-privatelinkendpoints'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-acragents'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.240.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "snet-cluster-systemnodepool",
                        "properties": {
                            "addressPrefix": "10.240.8.0/22",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-system-nodepools'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "snet-cluster-inscopenodepools",
                        "properties": {
                            "addressPrefix": "10.240.12.0/22",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-is-nodepools'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "snet-cluster-outofscopenodepools",
                        "properties": {
                            "addressPrefix": "10.240.16.0/22",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-oos-nodepools'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "snet-cluster-ingressservices",
                        "properties": {
                            "addressPrefix": "10.240.4.0/28",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-aksilbs'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "snet-applicationgateway",
                        "properties": {
                            "addressPrefix": "10.240.4.16/28",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-appgw'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "snet-management-ops",
                        "properties": {
                            "addressPrefix": "10.240.1.0/28",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-management-ops'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "snet-management-agents",
                        "properties": {
                            "addressPrefix": "10.240.2.0/26",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-management-ops'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "snet-management-acragents",
                        "properties": {
                            "addressPrefix": "10.240.251.0/28",
                            /*"routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },*/
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-acragents'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "snet-privatelinkendpoints",
                        "properties": {
                            "addressPrefix": "10.240.250.0/28",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-privatelinkendpoints'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "dhcpOptions": {
                    "dnsServers": [
                        "[reference(variables('hubFwResourceId'), '2020-05-01').ipConfigurations[0].properties.privateIpAddress]"
                    ]
                }
            },
            "resources": [
                {
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "2020-05-01",
                    "name": "[variables('toHubPeeringName')]",
                    "comments": "Peer to regional hub.",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
                    ],
                    "properties": {
                        "remoteVirtualNetwork": {
                            "id": "[parameters('hubVnetResourceId')]"
                        },
                        "allowForwardedTraffic": false,
                        "allowVirtualNetworkAccess": true,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false
                    }
                },
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "Microsoft.Insights/toHub",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "[concat('CreateHubTo', variables('clusterVNetName'), 'Peer')]",
            "resourceGroup": "[variables('hubRgName')]",
            "comments": "Sub incremental deployment to perform hub-to-spoke peering",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', variables('clusterVNetName'), variables('toHubPeeringName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "2020-05-01",
                            "name": "[concat(variables('hubNetworkName'), '/hub-to-', variables('clusterVNetName'))]",
                            "properties": {
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
                                },
                                "allowForwardedTraffic": false,
                                "allowGatewayTransit": false,
                                "allowVirtualNetworkAccess": true,
                                "useRemoteGateways": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "[variables('acrPrivateDnsZonesName')]",
            "location": "global",
            "comments": "Enabling Azure Container Registry Private Link on vnet.",
            "properties": {},
            "resources": [
                {
                    "type": "virtualNetworkLinks",
                    "apiVersion": "2020-06-01",
                    "name": "[concat('to_', variables('clusterVNetName'))]",
                    "location": "global",
                    "comments": "Enabling cluster vnet private zone DNS lookup - used by cluster vnet for direct DNS queries (ones not proxied via the hub).",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('acrPrivateDnsZonesName'))]"
                    ],
                    "properties": {
                        "virtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
                        },
                        "registrationEnabled": false
                    }
                },
                {
                    "type": "virtualNetworkLinks",
                    "apiVersion": "2020-06-01",
                    "name": "[concat('to_', variables('hubNetworkName'))]",
                    "location": "global",
                    "comments": "Enabling hub vnet private zone DNS lookup for ACR - used by azure firewall's dns proxy.",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('acrPrivateDnsZonesName'))]"
                    ],
                    "properties": {
                        "virtualNetwork": {
                            "id": "[parameters('hubVnetResourceId')]"
                        },
                        "registrationEnabled": false
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "[variables('aksPrivateDnsZonesName')]",
            "location": "global",
            "comments": "Enabling AKS Private Link on vnet.",
            "properties": {},
            "resources": [
                {
                    "type": "virtualNetworkLinks",
                    "apiVersion": "2020-06-01",
                    "name": "[concat('to_', variables('hubNetworkName'))]",
                    "location": "global",
                    "comments": "Enabling hub vnet private zone DNS lookup for private AKS - used by azure firewall's dns proxy.",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('aksPrivateDnsZonesName'))]"
                    ],
                    "properties": {
                        "virtualNetwork": {
                            "id": "[parameters('hubVnetResourceId')]"
                        },
                        "registrationEnabled": false
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('akvPrivateDnsZonesName')]",
            "location": "global",
            "comments": "Enabling Azure Key Vault Private Link support.",
            "properties": {},
            "resources": [
                {
                    "type": "virtualNetworkLinks",
                    "apiVersion": "2020-06-01",
                    "name": "[concat('to_', variables('clusterVNetName'))]",
                    "location": "global",
                    "comments": "Enabling Azure Key Vault Private Link on cluster vnet.",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('akvPrivateDnsZonesName'))]"
                    ],
                    "properties": {
                        "virtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
                        },
                        "registrationEnabled": false
                    }
                },
                {
                    "type": "virtualNetworkLinks",
                    "apiVersion": "2020-06-01",
                    "name": "[concat('to_', variables('hubNetworkName'))]",
                    "location": "global",
                    "comments": "Enabling hub vnet private zone DNS lookup for ACR - used by azure firewall's dns proxy.",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('akvPrivateDnsZonesName'))]"
                    ],
                    "properties": {
                        "virtualNetwork": {
                            "id": "[parameters('hubVnetResourceId')]"
                        },
                        "registrationEnabled": false
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-05-01",
            "name": "[variables('primaryClusterPipName')]",
            "location": "[parameters('location')]",
            "comments": "Used as primary entry point for workload. Expected to be assigned to an Azure Application Gateway.",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "publicIPAddressVersion": "IPv4"
            }
        }
    ],
    "outputs": {
        "clusterVnetResourceId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
            "type": "string"
        },
        "nodepoolSubnetResourceIds": {
            "value": "[createArray(
                        resourceId('Microsoft.Network/virtualNetworks/subnets', variables('clusterVNetName'), 'snet-cluster-systemnodepool'),
                        resourceId('Microsoft.Network/virtualNetworks/subnets', variables('clusterVNetName'), 'snet-cluster-inscopenodepools'),
                        resourceId('Microsoft.Network/virtualNetworks/subnets', variables('clusterVNetName'), 'snet-cluster-outofscopenodepools'))]",
            "type": "array"
        },
        "jumpboxSubnetResourceId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('clusterVNetName'), 'snet-management-ops')]",
            "type": "string"
        },
        "appGwPublicIpAddress": {
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('primaryClusterPipName'))).ipAddress]",
            "type": "string"
        }
    }
}
